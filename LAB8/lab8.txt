1.......

import java.util.Scanner;

class StackFull extends Exception{
	int size;
	StackFull(int size){
		this.size=size;
	}
	public String toString(){
		return "Stack is full with max size"+size;
	}
}
class StackEmpty extends Exception{
	public String toString(){
		return "Stack is empty";
	}
}
class Stack{
	int arr[];
	int tos;
	int size;
	Stack(int k){
		size=k;
		arr = new int [size];
		tos=-1;
	}
	private boolean isFull(){
		if(tos==size-1)
			return true;
		return false;
	}
	private boolean isEmpty(){
		if(tos==-1)
			return true;
		return false;
	}
	void push(int ele) throws StackFull{
			if(isFull()){
				throw new StackFull(size);
			}
			else{
			arr[++tos]=ele;
		}
	}
	void pop() throws StackEmpty{
		if(isEmpty()){
				throw new StackEmpty();
			}
		else{
			System.out.println("Popped element is : "+arr[tos]);
			tos=tos-1;
		}
	}
}
class StackDemo{
	public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter array size :");
        int size = sc.nextInt();
        Stack s= new Stack(size);
        int choice,ele;
        do
        {
            System.out.println("Enter Choice 1.Push 2.Pop 3.Exit");
            choice=sc.nextInt();
            switch(choice)
            {
                case 1 :
                {
                    System.out.println("Enter element to push : ");
                    ele=sc.nextInt();
                    try{
                    s.push(ele);
                	}
                	catch(StackFull e){
                		System.out.println(e);
                	}
                    break;
                }
                case 2 :
                {try{
                 s.pop();}
                 catch(StackEmpty e){
                 	System.out.println(e);
                 }
                    break;
                }
                case 3 :
                {
                    System.out.println("Bye!");
                    System.exit(0);
                }
            }
        }
        while(choice!=2);
    }
}
  
  
  
2.....


import java.util.Scanner;
class InvalidDayException extends Exception{
	// 	InvalidDayException(){
	// 	super("Date is invalid");
	// }
	public String toString(){
		return "Date is invalid";
	}
}
class InvalidMonthException extends Exception{
	// InvalidMonthException(){
	// 	super("Month is invalid");
	// }
	public String toString(){
		return "Month is invalid";
	}
}

class CurrentDate{
	int day;
	int month;
	int year;
	void cDate(int day,int month, int year){
		this.day=day;
		this.month=month;
		this.year=year;
	}
	void display() throws InvalidDayException,InvalidMonthException{
		if(day<1 || day>31){
			throw new InvalidDayException();
		}
		else if(month<1 || month>12){
			throw new InvalidMonthException();
		}
		System.out.println(day+"/"+month+"/"+year);
	}

}



class DateDemo{
	public static void main(String[] args){
		Scanner sc =new Scanner(System.in);
		CurrentDate obj=new CurrentDate();
		System.out.println("Enter day, month and year :");
		int day=sc.nextInt();
		int month=sc.nextInt();
		int year=sc.nextInt();
		obj.cDate(day,month,year);
		try{
			obj.display();
		}
		catch(InvalidDayException e){
			System.out.println(e);
		}
		catch(InvalidMonthException f){
			System.out.println(f);
		}
	}
}


3...

import java.util.*;
class SeatsFilledException extends Exception{
	public String toString(){
		return "Sorry, seats are FULL";
	}
}
class Student{
	static int[] lst = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
	int reg_no;
	String name;
	GregorianCalendar doj;
	short sem;
	float gpa;
	float cgpa;
	Student(){
		reg_no=0;
		name="N/A";
		doj=new GregorianCalendar();
		sem=0;
		gpa=0.0f;
		cgpa=0.0f;
	}
	Student(String name, short sem, float gpa, float cgpa, int d, int m, int y){
		lst[(y%100)-1]++;
		reg_no = ((y%100)*100) + lst[(y%100)-1];
		this.name=name;
		this.sem=sem;
		this.gpa=gpa;
		this.cgpa=cgpa;
		doj= new GregorianCalendar(y,m,d);
	}
	void display() throws SeatsFilledException{ 
		if((reg_no%100)>25){
	 		throw new SeatsFilledException();
		}
		else{
		System.out.println("Registration Name : "+reg_no);
		System.out.println("Name : "+name);
		System.out.println("Semester : " +sem);
		System.out.print("Date of joining : ");
		System.out.println(doj.get(Calendar.DATE)+"/"+doj.get(Calendar.MONTH)+"/"+doj.get(Calendar.YEAR));
		System.out.println("GPA : "+gpa);
		System.out.println("CGPA : "+cgpa);
		}
	}
}
class StudentDemo{
		public static void main(String[] args){
		Scanner sc =new Scanner(System.in);
		System.out.println("Enter number of students :");
		int n=sc.nextInt();
		Student[] s= new Student[n];
		for(int i=0;i<n;i++){
			sc.nextLine();
			System.out.println("Enter student name : ");
			String name =sc.nextLine();
			System.out.println("Enter date , month and year : ");
			int d=sc.nextInt();
			int m=sc.nextInt();
			int y=sc.nextInt();
			System.out.println("Enter semester : ");
			short sem=sc.nextShort();
			System.out.println("Enter GPA and CGPA :");
			float gpa=sc.nextFloat();
			float cgpa=sc.nextFloat();
			s[i]= new Student(name,sem,gpa,cgpa,d,m,y);
			try{
			s[i].display();
			}
			catch(SeatsFilledException f){
			System.out.println(f);
		}
		}
	}
}




